
import os
import sys
import numpy as numpy
import pandas as pd
import matplotlib.pyplot as plt

current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.join(current_dir, '..', '..')
sys.path.append(project_root)

from config.local_config import LOCAL_DATA_DIRECTORY


def setup():
    os.chdir(LOCAL_DATA_DIRECTORY)
    directory_name = r"FactSet"
    os.chdir(directory_name)


def imports_exports(country: str | None = None):
    
    country = "NL" if country is None else country
    
    file_name_dict = {
        "NL": r"ImportsExports_NL_2018_2023.xlsx",
        "BE": r"ImportsExports_BE_2013_2023.xlsx",
        "GE": r"ImportsExports_GE_2013_2023.xlsx"
    }
    
    try:
        file_name = file_name_dict[country]
    except KeyError:
        file_name = file_name_dict["NL"]
    
    date_format = '%m/%d/%Y'
    df = pd.read_excel(file_name, 
                        parse_dates=True, 
                        skiprows=4, 
                        dtype={'a': str}, 
                        nrows=33,
                        usecols=list(range(103)),
                        index_col=0,
                        date_format=date_format)

    df_inverted_columns = df.iloc[:, ::-1]
    df_t = df_inverted_columns.T
    
    n_categories = 10
    big_cols = [0, 11, 22]
    
    df_big = df_t.iloc[:, big_cols]
    df_imports = df_t.iloc[:, 1:11]
    df_exports = df_t.iloc[:, 12:22]
    df_balance = df_t.iloc[:, 23:33]
    
    dfs = [df_big, df_imports, df_exports, df_balance]
    
    fig, axs = plt.subplots(2, 2, sharex=True, figsize=(12, 7))
    (ax1, ax2), (ax3, ax4) = axs
    axs_flat = [ax1, ax2, ax3, ax4]
    
    suptitle = "Import & Exports in The Netherlands 2018-2023"
    fig.suptitle(suptitle)
    ax_titles = ["Totals", "Imports", "Exports", "Balances"]
    
    for df_i, ax, title in zip(dfs, axs_flat, ax_titles):
        df_i.plot(ax=ax, kind="line", linewidth=2)
        ax.set_title(title)

    plt.show() 



def main():
    print("Started")
    setup()
    imports_exports()


if __name__ == "__main__":
    main()

